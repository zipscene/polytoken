{
	"env": {
		"node": true
	},
	"ecmaFeatures": {
		"arrowFunctions": true,
		"blockBindings": true,
		"binaryLiterals": true,
		"octalLiterals": true,
		"destructuring": true,
		"defaultParams": true,
		"restParams": true,
		"spread": true,
		"classes": true,
		"forOf": true,
		"objectLiteralComputedProperties": true,
		"objectLiteralShorthandMethods": true,
		"objectLiteralShorthandProperties": true,
		"superInFunctions": true,
		"templateStrings": true
	},
	"rules": {
		"comma-dangle": 2,
		"no-cond-assign": 2,
		"no-console": 0,
		"no-constant-condition": 2,
		"no-control-regex": 1,
		"no-debugger": 1,
		"no-dupe-keys": 2,
		"no-empty": 2,
		"no-empty-character-class": 2,
		"no-ex-assign": 2,
		"no-extra-boolean-cast": 2,
		"no-extra-parens": 0,
		"no-extra-semi": 2,
		"no-func-assign": 2,
		//"no-inner-declarations": [2, "both"],
		"no-inner-declarations": 0,	// disabled because it also counts 'let'
		"no-invalid-regexp": 2,
		"no-irregular-whitespace": 2,
		"no-negated-in-lhs": 2,
		"no-obj-calls": 2,
		"no-regex-spaces": 0,
		"no-reserved-keys": 0,
		"no-sparse-arrays": 0,
		"no-unreachable": 2,
		"use-isnan": 2,
		"valid-jsdoc": 0,
		"valid-typeof": 2,
		// This is disabled because the linter currently believes that ES6 class method
		// declarations are declaring a variable inside a block scope and flags them
		"block-scoped-var": 0,
		//"block-scoped-var": 2,
		"complexity": 0,
		"consistent-return": 2,
		"curly": [2, "multi-line"],
		"default-case": 0,
		"dot-notation": 2,
		"eqeqeq": 2,
		"guard-for-in": 0,
		"no-alert": 1,
		"no-caller": 2,
		"no-div-regex": 0,
		"no-else-return": 0,
		"no-empty-label": 2,
		"no-eq-null": 2,
		"no-eval": 2,
		"no-extend-native": 2,
		"no-extra-bind": 2,
		"no-fallthrough": 0,
		"no-floating-decimal": 2,
		"no-implied-eval": 2,
		"no-iterator": 2,
		"no-labels": 2,
		"no-lone-blocks": 0,
		"no-loop-func": 2,
		"no-multi-spaces": 0,
		"no-multi-str": 2,
		"no-native-reassign": 2,
		"no-new": 1,
		"no-new-func": 2,
		"no-new-wrappers": 0,
		"no-octal": 2,
		"no-octal-escape": 2,
		"no-process-env": 0,
		"no-proto": 2,
		"no-redeclare": 2,
		"no-return-assign": 2,
		"no-script-url": 2,
		"no-self-compare": 2,
		"no-sequences": 2,
		"no-throw-literal": 0,
		"no-unused-expressions": 2,
		"no-void": 2,
		"no-warning-comments": 0,
		"no-with": 2,
		"radix": 0,
		"vars-on-top": 2,
		"wrap-iife": 2,
		"yoda": [2, "never", { "exceptRange": true }],
		"strict": 0,
		"no-catch-shadow": 0,
		"no-delete-var": 2,
		"no-label-var": 2,
		"no-shadow": 0,
		"no-shadow-restricted-names": 2,
		// This is disabled because eslint does not (currently) recognize class
		// declarations as defining a symbol and throws undefined errors when
		// referencing the class. This really should be re-enabled after the
		// linter is fixed.
		"no-undef": 0,
		//"no-undef": 2,
		"no-undef-init": 0,
		"no-undefined": 0,
		"no-unused-vars": 1,
		"no-use-before-define": [2, "nofunc"],
		"handle-callback-err": 0,
		"no-mixed-required": 0,
		"no-new-require": 2,
		"no-path-concat": 0,
		"no-process-exit": 0,
		"no-restricted-modules": 0,
		"no-sync": 0,
		"indent": [2, "tab", { "SwitchCase": 2 }],
		"brace-style": [2, "1tbs", { "allowSingleLine": true }],
		"camelcase": 2,
		"comma-spacing": [2, { "before": false, "after": true }],
		"comma-style": [2, "last"],
		"consistent-this": 0,
		"eol-last": 0,
		"func-names": 0,
		"func-style": 0,
		"key-spacing": 1,
		"max-nested-callbacks": 0,
		"new-cap": 2,
		"new-parens": 2,
		"no-array-constructor": 2,
		"no-inline-comments": 0,
		"no-lonely-if": 0,
		"no-mixed-spaces-and-tabs": 2,
		"no-multiple-empty-lines": 0,
		"no-nested-ternary": 2,
		"no-new-object": 0,
		"semi-spacing": 2,
		"no-spaced-func": 2,
		"no-ternary": 0,
		"no-trailing-spaces": 2,
		"no-underscore-dangle": 0,
		"no-wrap-func": 0,
		"one-var": 0,
		"operator-assignment": 0,
		"padded-blocks": 0,
		"quote-props": 0,
		"quotes": [2, "single", "avoid-escape"],
		"semi": [2, "always"],
		"sort-vars": 0,
		"space-after-keywords": [2, "always"],
		"space-before-blocks": [2, "always"],
		"space-before-function-paren": [2, "never"],
		"object-curly-spacing": [2, "always"],
		"array-bracket-spacing": [2, "always"],
		"space-in-parens": 0,
		"space-infix-ops": 0,
		"space-return-throw-case": 2,
		"space-unary-ops": 2,
		"spaced-line-comment": 0,
		"wrap-regex": 0,
		"no-var": 2,
		"generator-star": 0,
		"max-len": [2, 120, 4],
		"max-params": [2, 10],
		"max-statements": 0,
		"no-bitwise": 0,
		"no-plusplus": 0
	}
}
