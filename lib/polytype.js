

/**
 * This class is generated by the makePolytype() method on Polytoken. It receives a specification of
 * the dimensions that make up this Polytype, including their respective tokenConfigs. It provides the methods used
 * to generate token for both a range and point.
 *
 * @class Polytype
 * @constructor
 * @param {Array[Dimension]} dimensions - The dimensions that comprise this Polytype.
 */
class Polytype {

	constructor(dimensions) {
		this.dimensions = dimensions;
	}

	/**
	 * Generate and return a set of tokens that contain the given range tuple as accurately as possible.
	 *
	 * @method getRangeTokens
	 * @param {Array[Mixed]} rangeTuple
	 * @return {Array[String]} tokens - Set of tokens which comprise this range.
	 */
	getRangeTokens(rangeTuple) {
		// TODO
		// rangeTuple should contain a range object for every dimension, in order. For each, validate the range
		// object, then generate the range tokens. Then, each set of tokens will need to multiplied together to
		// form the full set. We can talk about the actual structure of the tokens.
	}

	/**
	 * Return the set of tokens to which a point can potentially belong. Any tokenized range that contains at least
	 * one of these tokens also contains this point.
	 *
	 * @method getTokensForPoint
	 * @param {Array[Mixed]} pointTuple
	 * @return {Array[String]} token - Set of tokens which contain this point.
	 */
	getTokensForPoint(pointTuple) {
		// TODO
		// Similar to getRangeTokens; get the set of tokens for each point then multiply them.
	}
}

module.exports = Polytype;
